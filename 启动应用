#!/bin/bash

# 智能成绩分析系统 - 跨平台启动器
# 支持 Mac, Windows (Git Bash), Linux

# 设置颜色
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# 清屏
clear

# 显示启动画面
echo -e "${BLUE}"
echo "     ████████╗██╗██╗   ██╗██████╗ ██╗   ██╗██████╗ "
echo "     ╚══██╔══╝██║██║   ██║██╔══██╗██║   ██║██╔══██╗"
echo "        ██║   ██║██║   ██║██████╔╝██║   ██║██████╔╝"
echo "        ██║   ██║██║   ██║██╔═══╝ ██║   ██║██╔═══╝ "
echo "        ██║   ██║╚██████╔╝██║     ╚██████╔╝██║     "
echo "        ╚═╝   ╚═╝ ╚═════╝ ╚═╝      ╚═════╝ ╚═╝     "
echo -e "${NC}"
echo ""
echo -e "${YELLOW}           🎓 智能成绩分析系统 v2.0${NC}"
echo -e "${YELLOW}           📊 Excel/CSV 智能分析工具${NC}"
echo ""
echo "==============================================="

# 获取脚本目录
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
cd "$SCRIPT_DIR"

# 检测操作系统
detect_os() {
    if [[ "$OSTYPE" == "darwin"* ]]; then
        echo "mac"
    elif [[ "$OSTYPE" == "msys" ]] || [[ "$OSTYPE" == "win32" ]] || [[ "$OSTYPE" == "cygwin" ]]; then
        echo "windows"
    elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
        echo "linux"
    else
        echo "unknown"
    fi
}

# 打开浏览器
open_browser() {
    local url="$1"
    local os=$(detect_os)
    
    case $os in
        "mac")
            open "$url" 2>/dev/null
            ;;
        "windows")
            cmd.exe /c start "$url" 2>/dev/null || start "$url" 2>/dev/null
            ;;
        "linux")
            xdg-open "$url" 2>/dev/null || firefox "$url" 2>/dev/null || google-chrome "$url" 2>/dev/null
            ;;
        *)
            echo "请手动打开浏览器访问: $url"
            ;;
    esac
}

# 安装Node.js提示
install_nodejs_help() {
    local os=$(detect_os)
    echo -e "${RED}❌ 未检测到Node.js${NC}"
    echo ""
    echo -e "${YELLOW}📥 请先安装Node.js：${NC}"
    
    case $os in
        "mac")
            echo -e "${BLUE}🍎 Mac用户：${NC}"
            echo "1. 访问 https://nodejs.org/"
            echo "2. 下载LTS版本并安装"
            echo "3. 重新运行此应用"
            echo ""
            read -p "是否现在打开Node.js官网？ (y/n): " choice
            if [[ $choice == [Yy]* ]]; then
                open_browser "https://nodejs.org/"
            fi
            ;;
        "windows")
            echo -e "${BLUE}🪟 Windows用户：${NC}"
            echo "1. 访问 https://nodejs.org/"
            echo "2. 下载LTS版本并安装"
            echo "3. 重新运行此应用"
            echo ""
            read -p "是否现在打开Node.js官网？ (y/n): " choice
            if [[ $choice == [Yy]* ]]; then
                open_browser "https://nodejs.org/"
            fi
            ;;
        "linux")
            echo -e "${BLUE}🐧 Linux用户：${NC}"
            echo "sudo apt install nodejs npm"
            echo "或访问 https://nodejs.org/"
            ;;
        *)
            echo "访问 https://nodejs.org/ 下载安装"
            ;;
    esac
    
    echo ""
    read -p "按回车键退出..."
    exit 1
}

# 主程序
main() {
    echo -e "${BLUE}🔍 检查运行环境...${NC}"
    echo -e "${BLUE}🖥️  操作系统: $(detect_os)${NC}"
    
    # 检查Node.js
    if command -v node >/dev/null 2>&1; then
        echo -e "${GREEN}✅ Node.js已安装 ($(node --version))${NC}"
    else
        install_nodejs_help
        return
    fi
    
    # 检查并安装依赖
    if [ ! -d "node_modules" ]; then
        echo -e "${YELLOW}📦 首次运行，安装应用组件...${NC}"
        npm install
        if [ $? -ne 0 ]; then
            echo -e "${RED}❌ 组件安装失败${NC}"
            echo -e "${YELLOW}💡 请检查网络连接${NC}"
            read -p "按回车键退出..."
            exit 1
        fi
    fi
    
    echo -e "${GREEN}✅ 应用环境就绪${NC}"
    echo ""
    echo "==============================================="
    echo -e "${YELLOW}           🚀 启动智能成绩分析系统${NC}"
    echo "==============================================="
    echo ""
    echo -e "${GREEN}  🌐 应用地址: http://localhost:3001${NC}"
    echo -e "${GREEN}  📱 浏览器将在3秒后自动打开${NC}"
    echo -e "${GREEN}  🛑 按Ctrl+C可停止应用${NC}"
    echo ""
    echo -e "${BLUE}  ✨ 功能包括：${NC}"
    echo "     📊 Excel/CSV智能解析"
    echo "     📈 成绩可视化分析"
    echo "     📄 PDF报告生成"
    echo "     🎯 个人学生分析"
    echo "     🔍 临界生识别"
    echo ""
    echo "==============================================="
    
    # 延迟启动浏览器
    echo -e "${YELLOW}✨ 应用启动中...${NC}"
    (sleep 3 && open_browser "http://localhost:3001") &
    
    # 启动应用
    node server.js
    
    echo ""
    echo -e "${YELLOW}🛑 应用已停止${NC}"
    read -p "按回车键退出..."
}

# 执行主程序
main
